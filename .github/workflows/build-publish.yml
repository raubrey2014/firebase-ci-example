name: Build and Deploy
on:
  push:
    branches:
      - main

jobs:
  build_frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install Dependencies
        working-directory: ./front-end
        run: yarn install
      - name: Build Next.js
        working-directory: ./front-end
        run: yarn run build
      - name: Export Next.js bundle
        working-directory: ./front-end
        run: yarn run export
      - name: Archive Frontend Artifact
        uses: actions/upload-artifact@v2
        with:
          name: frontend
          path: front-end/out

  build_functions:
    name: Build Functions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Dependencies
        working-directory: ./functions
        run: yarn install
      - name: Lint functions
        working-directory: ./functions
        run: yarn run lint
      - name: Build functions
        working-directory: ./functions
        run: yarn run build
      - name: Archive Functions Artifact
        uses: actions/upload-artifact@v2
        with:
          name: functions
          path: functions/lib

  deploy:
    name: Deploy Apps and Functions
    needs: [build_functions, build_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Download Frontend Artifact
        uses: actions/download-artifact@v2
        with:
          name: frontend
          path: front-end/out
      - name: Download Functions Artifact
        uses: actions/download-artifact@v2
        with:
          name: functions
          path: functions/lib
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
